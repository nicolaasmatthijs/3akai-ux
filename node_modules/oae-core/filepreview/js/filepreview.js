/*!
 * Copyright 2013 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['require', 'jquery', 'oae.core'], function(require, $, oae) {

    return function(uid, showSettings, widgetData) {

        // Cache the widget container
        var $rootel = $('#' + uid);

        /////////////////////
        // DEFAULT PREVIEW //
        /////////////////////

        /**
         * Render the default preview for all files that don't have a particular in-line preview
         */
        var renderDefault = function() {
            oae.api.util.template().render($('#filepreview-default-template', $rootel), {'content': widgetData}, $('#filepreview-container', $rootel));
        };

        /////////////////////
        // IMAGE PREVIEW //
        /////////////////////

        /**
         * Render an image preview by embedding the image into the document
         */
        var renderImagePreview = function() {
            oae.api.util.template().render($('#filepreview-image-template', $rootel), {'content': widgetData}, $('#filepreview-container', $rootel));
        };

        //////////////////////
        // DOCUMENT PREVIEW //
        //////////////////////

        /**
         * Render a PDF or Office Document
         */
        var renderDocumentPreview = function() {
            // Only load the documentviewer when we are looking at an actual document
            require(['../lib/document-viewer/assets/viewer.js'], function(DV) {
                // Prepare the container
                oae.api.util.template().render($('#filepreview-document-template', $rootel), null, $('#filepreview-container', $rootel));

                // Initialize the document viewer
                var doc = {
                    'id': widgetData.id,
                    'title': widgetData.displayName,
                    'pages': widgetData.previews.pageCount,
                    'resources': {
                        'pdf': '/api/content/' + widgetData.id + '/download',
                        'page': {
                            'image': '/api/content/' + widgetData.id + '/revisions/' + widgetData.latestRevisionId + '/previews/page.{page}.{size}.png?signature=' + widgetData.signature.signature + '&expires=' + widgetData.signature.expires + '&lastmodified=' + widgetData.signature.lastModified
                        }
                    }
                };
                DV.load(doc, {
                    'container': '#' + uid + ' #filepreview-document',
                    'width': '100%',
                    'height': 700,
                    'sidebar': false,
                    'text': false
                });
            });
        };

        /////////////////////////
        // VIDEO/SOUND PREVIEW //
        /////////////////////////

        /**
         * Render a video preview using Flowplayer
         */
        var renderVideoPreview = function() {
            // Only load the flowplayer when we are looking at an actual video
            require(['flowplayer'], function() {
                oae.api.util.template().render($('#filepreview-video-template', $rootel), {'content': widgetData}, $('#filepreview-container', $rootel));
                $('#filepreview-video', $rootel).flowplayer();
            });
        };


        ///////////////////
        // FLASH PREVIEW //
        ///////////////////

        ////////////////////
        // INITIALISATION //
        ////////////////////

        /**
         * Render the file's preview based on its type
         */
        var initFilePreview = function() {
            // Image preview
            if (widgetData.mime.substring(0, 6) === 'image/') {
                renderImagePreview();
            // Display PDFs, Office files, ..
            } else if (widgetData.previews && widgetData.previews.pageCount) {
                renderDocumentPreview();
            // Video preview
            } else if (widgetData.mime.substring(0, 6) === 'video/') {
                renderVideoPreview();
            // Default preview
            } else {
                renderDefault();
            }
        };

        initFilePreview();

    };
});
