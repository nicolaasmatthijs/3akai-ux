/*!
 * Copyright 2013 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.oembed'], function($, oae) {

    return function(uid, showSettings, widgetData) {

        // Cache the widget container
        var $rootel = $('#' + uid);

        // Whitelist the supported oEmbed providers
        /*var oembedProviders = {
V            'blip': RegExp('blip\\.tv/.+'),
V            'dailymotion': RegExp('dailymotion\\.com/.+'),
V            'deviantart': RegExp('deviantart.com/.+'),
V            'dribble': RegExp('dribbble.com/shots/.+'),
V            'flickr': RegExp('flickr\\.com/photos/.+'),
V            'hulu': RegExp('hulu\\.com/watch/.*'),
V            'ifixit': RegExp('ifixit.com/.+'),
V            'imgly': RegExp('img\\.ly/.+'),
X            'imgurcom': RegExp('imgur\\.com/gallery/.+'),
V            'instagram': RegExp('instagr\\.?am(\\.com)?/.+'),
X            'livestream': RegExp('livestream.com/.+'),
V            'pastebin': RegExp('pastebin\\.com/[\\S]{8}'),
            'photobucket': RegExp('photobucket\\.com/(albums|groups)/.+'),
            'pinterest': RegExp('pinterest.com/pin/.+'),
            'prezi': RegExp('prezi.com/.*'),
            'scribd': RegExp('scribd\\.com/.+'),
V            'slideshare': RegExp('slideshare\.net'),
            'soundcloud': RegExp('soundcloud.com/.+'),
            'soundcloud_short': RegExp('snd.sc/.+'),
            'speakerdeck': RegExp('speakerdeck.com/.+'),
            'spotify': RegExp('(play|open).spotify.com/(album|track|artist)'),
            'stackoverflow': RegExp('stackoverflow.com/questions/[\\d]+'),
            'ted': RegExp('ted.com/talks/.+'),
            'twitgoocom': RegExp('twitgoo\\.com/.+'),
            'twitpic': RegExp('twitpic.com/.+'),
X            'twitter': RegExp('twitter.com/.+'),
            'twitvid': RegExp('telly.com/.+'),
            'viddler': RegExp('viddler.com/v/.+'),
V            'vimeo': RegExp('vimeo\.com/.+'),
X            'wikipedia': RegExp('wikipedia.org/wiki/.+'),
            'yfrog': RegExp('yfrog\\.(com|ru|com\\.tr|it|fr|co\\.il|co\\.uk|com\\.pl|pl|eu|us)/.+'),
V            'youtube': RegExp('youtube\\.com/watch.+v=[\\w-]+&?')
        };*/

        $.fn.updateOEmbedProvider('dribbble', null, null, null, {
                //templateRegex:/.*shots\/([\d]+).*/,
                'templateData' : function(data) {
                    if (!data.image_url) {
                        return false;
                    }
                    // TODO
                    return  '<img src="'+data.image_url+'"/>';
                }
            });

            $.fn.updateOEmbedProvider('img.ly', 'photo', ['img\\.ly/.+'],'http://img.ly/show/large/$1', {
                //templateRegex: /.*ly\/([^\/]+).*/,
                'embedtag': {tag: 'img'}//,
                //nocache: 1
            });

        /**
         * Decide what type of preview to render based on the content type, mimetype and previews data
         * TODO
         */
        var initPreview = function() {
            $('#linkpreview-container', $rootel).oembed(widgetData.link, {
                // Delete the arrow that collapses the container
                includeHandle: false,
                // Place the content into the container instead of creating a new div
                embedMethod: 'fill'
            });
        };

        initPreview();

    };
});
