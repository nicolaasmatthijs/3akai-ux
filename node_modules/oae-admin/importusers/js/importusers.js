/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.fileupload', 'jquery.iframe-transport'], function($, oae) {

    return function(uid, showSettings) {

        // The widget container
        var $rootel = $('#' + uid);

        // Keeps track of the selected file to send to the upload API
        var selectedFile = null;

        // IE9 and below don't support XHR file uploads and we fall back to iframe transport
        var useIframeTransport = !$.support.xhrFileUpload && !$.support.xhrFormDataFileUpload;

        /**
         * TODO
         */
        var reset = function() {
            // TODO
        };

        /**
         * Set up validation for the import users form. This will validate and submit the form or
         * show an error message when appropriate.
         */
        var setUpValidation = function() {
            oae.api.util.validation().validate($('#importusers-form', $rootel), {
                'submitHandler': importUsers
            });
        };

        /**
         * TODO
         */
        var setUpCSVUploadField = function() {
            var fileuploadOptions = {
                'url': '/api/user/import',
                'forceIframeTransport': useIframeTransport,
                'replaceFileInput': false,
                'add': function(ev, data) {
                    selectedFile = data.files[0];
                    console.log(selectedFile);
                },
                'progress': function(ev, data) {
                    // If we need an iframe for the upload, progress will not be supported
                    if (!useIframeTransport) {
                        // Update the progress bar
                        updateProgress((data.loaded / data.total) * 100);
                    }
                }
            };

            $('#importusers-csv', $rootel).fileupload(fileuploadOptions);
        };

        /**
         * Updates the progress indicator
         * TODO
         *
         * @param  {Number}   progress   Number between 0 and 100 indicating the upload progress
         */
        var updateProgress = function(progress) {
            $('.bar', $rootel).css('width', progress + '%');
        };

        /**
         * TODO
         */
        var importUsers = function() {
            // jQuery.fileupload requires sending the other form data as a .serializeArray object
            // http://api.jquery.com/serializeArray/
            var data = [
                {'name': 'authentication', 'value': $('#importusers-authentication', $rootel).val()},
                {'name':'tenantAlias', 'value': 'marist'}
            ];
            console.log(data);

            $('#importusers-csv', $rootel).fileupload('send', {
                'files': [selectedFile],
                'formData': data,
                'success': function(data) {
                    // The response will return as text/plain to avoid IE9 trying to download
                    // the response when using the iFrame fallback upload solution

                    // In IE9 the response is a jQuery object. In this case we have
                    // to extract the data found in the inner pre tag.
                    if (data instanceof $) {
                        data = data.find('pre').text();
                    }
                    console.log(data);
                },
                'error': function(jqXHR, textStatus) {
                    console.log('ERROR');
                }
            });
        };

        /**
         * Sets up the accountpreferences modal
         */
        var setUpImportUsersModal = function() {
            $(document).on('click', '.oae-trigger-importusers', function() {
                $('#importusers-modal', $rootel).modal({
                    'backdrop': 'static'
                });
                setUpValidation();
                setUpCSVUploadField();
            });

            $('#importusers-modal', $rootel).on('hidden', reset);
        };

        setUpImportUsersModal();

    };
});
